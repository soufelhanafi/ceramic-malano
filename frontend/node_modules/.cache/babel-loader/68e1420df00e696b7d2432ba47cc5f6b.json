{"ast":null,"code":"import { all, takeEvery, put, call, select } from 'redux-saga/effects';\nimport * as userApis from \"../../services/users\";\nimport actions from \"./actions\";\nexport function* LOGIN({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n  const response = yield call(userApis.login, email, password);\n\n  if (response) {\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loading: false\n      }\n    });\n  } else {\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loading: false,\n        showErrorMessage: true,\n        message: \"Email/mot de passe incorrect\"\n      }\n    });\n  }\n}\nexport default function* rootSaga() {\n  yield all([takeEvery(actions.LOGIN, LOGIN)]);\n}","map":{"version":3,"sources":["/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/redux/users/sagas.js"],"names":["all","takeEvery","put","call","select","userApis","actions","LOGIN","payload","email","password","response","login","type","SET_STATE","loading","showErrorMessage","message","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,oBAAlD;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,UAAUC,KAAV,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA0B;AAC/B,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBF,OAA1B;AACA,QAAMG,QAAQ,GAAG,MAAMR,IAAI,CAACE,QAAQ,CAACO,KAAV,EAAiBH,KAAjB,EAAwBC,QAAxB,CAA3B;;AACA,MAAGC,QAAH,EAAY;AACV,UAAMT,GAAG,CAAC;AACRW,MAAAA,IAAI,EAACP,OAAO,CAACQ,SADL;AAERN,MAAAA,OAAO,EAAC;AAAEO,QAAAA,OAAO,EAAE;AAAX;AAFA,KAAD,CAAT;AAID,GALD,MAKK;AACH,UAAMb,GAAG,CAAC;AACRW,MAAAA,IAAI,EAACP,OAAO,CAACQ,SADL;AAERN,MAAAA,OAAO,EAAC;AAAEO,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,gBAAgB,EAAC,IAAnC;AAAyCC,QAAAA,OAAO,EAAC;AAAjD;AAFA,KAAD,CAAT;AAID;AACF;AAED,eAAe,UAAUC,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CACRC,SAAS,CAACK,OAAO,CAACC,KAAT,EAAgBA,KAAhB,CADD,CAAD,CAAT;AAGD","sourcesContent":["import { all, takeEvery, put, call, select } from 'redux-saga/effects'\nimport * as userApis from \"../../services/users\"\nimport actions from \"./actions\"\n\nexport function* LOGIN({payload}){\n  const {email, password} = payload\n  const response = yield call(userApis.login, email, password);\n  if(response){\n    yield put({\n      type:actions.SET_STATE,\n      payload:{ loading: false }\n    })\n  }else{\n    yield put({\n      type:actions.SET_STATE,\n      payload:{ loading: false, showErrorMessage:true, message:\"Email/mot de passe incorrect\" }\n    })\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeEvery(actions.LOGIN, LOGIN),\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}