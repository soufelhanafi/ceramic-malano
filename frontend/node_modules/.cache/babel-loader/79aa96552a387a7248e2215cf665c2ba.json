{"ast":null,"code":"var _jsxFileName = \"/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/routers/index.js\";\nimport React from \"react\";\nimport PrivateRouter from \"./privateRoutes\";\nimport PublicRouter from \"./publicRoutes\";\nimport { connect } from \"react-redux\";\n\nclass AppRouter extends React.Component {\n  render() {\n    const {\n      authorized\n    } = this.props;\n\n    if (authorized) {\n      return /*#__PURE__*/React.createElement(PrivateRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(PublicRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.users;\n};\n\nexport default connect(mapStateToProps)(AppRouter);","map":{"version":3,"sources":["/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/routers/index.js"],"names":["React","PrivateRouter","PublicRouter","connect","AppRouter","Component","render","authorized","props","mapStateToProps","state","users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAEtCC,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAe,KAAKC,KAA1B;;AACA,QAAGD,UAAH,EAAc;AACZ,0BAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEM;AACJ,0BAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AATqC;;AAYxC,MAAME,eAAe,GAAGC,KAAK,IAAE;AAC7B,SAAOA,KAAK,CAACC,KAAb;AACD,CAFD;;AAGA,eAAeR,OAAO,CAACM,eAAD,CAAP,CAAyBL,SAAzB,CAAf","sourcesContent":["import React from \"react\"\nimport PrivateRouter from \"./privateRoutes\"\nimport PublicRouter from \"./publicRoutes\"\nimport { connect } from \"react-redux\"\n\nclass AppRouter extends React.Component {\n\n  render(){\n    const {authorized} = this.props\n    if(authorized){\n      return <PrivateRouter />\n    }else {\n      return <PublicRouter />\n    }\n  }\n}\n\nconst mapStateToProps = state=>{\n  return state.users\n}\nexport default connect(mapStateToProps)(AppRouter)\n"]},"metadata":{},"sourceType":"module"}