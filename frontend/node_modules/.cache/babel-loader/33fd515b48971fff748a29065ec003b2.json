{"ast":null,"code":"var _jsxFileName = \"/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/routers/index.js\";\nimport React from \"react\";\nimport PrivateRouter from \"./privateRoutes\";\nimport PublicRouter from \"./publicRoutes\";\nimport { connect } from \"react-redux\";\nimport { List } from 'react-content-loader';\nimport { Row, Col } from \"antd\";\n\nclass AppRouter extends React.Component {\n  render() {\n    const {\n      authorized,\n      loadingCurrentUser\n    } = this.props;\n\n    if (loadingCurrentUser) {\n      return /*#__PURE__*/React.createElement(Row, {\n        justify: \"center\",\n        align: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        span: 12,\n        style: {\n          marginTop: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    if (authorized) {\n      return /*#__PURE__*/React.createElement(PrivateRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(PublicRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.users;\n};\n\nexport default connect(mapStateToProps)(AppRouter);","map":{"version":3,"sources":["/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/routers/index.js"],"names":["React","PrivateRouter","PublicRouter","connect","List","Row","Col","AppRouter","Component","render","authorized","loadingCurrentUser","props","marginTop","mapStateToProps","state","users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;;AAEA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AAEtCC,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA,UAAD;AAAaC,MAAAA;AAAb,QAAmC,KAAKC,KAA9C;;AACA,QAAGD,kBAAH,EAAsB;AACpB,0BACE,oBAAC,GAAD;AAAK,QAAA,OAAO,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAe,QAAA,KAAK,EAAE;AAACE,UAAAA,SAAS,EAAC;AAAX,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF;AASD;;AACD,QAAGH,UAAH,EAAc;AACZ,0BAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEM;AACJ,0BAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AApBqC;;AAuBxC,MAAMI,eAAe,GAAGC,KAAK,IAAE;AAC7B,SAAOA,KAAK,CAACC,KAAb;AACD,CAFD;;AAGA,eAAeb,OAAO,CAACW,eAAD,CAAP,CAAyBP,SAAzB,CAAf","sourcesContent":["import React from \"react\"\nimport PrivateRouter from \"./privateRoutes\"\nimport PublicRouter from \"./publicRoutes\"\nimport { connect } from \"react-redux\"\nimport { List } from 'react-content-loader'\nimport {Row, Col} from \"antd\"\n\nclass AppRouter extends React.Component {\n\n  render(){\n    const {authorized, loadingCurrentUser} = this.props\n    if(loadingCurrentUser){\n      return (\n        <Row justify=\"center\" align=\"middle\">\n          <Col span={6} />\n          <Col span={12} style={{marginTop:100}}>\n            <List />\n          </Col>\n        </Row>\n      )\n\n    }\n    if(authorized){\n      return <PrivateRouter />\n    }else {\n      return <PublicRouter />\n    }\n  }\n}\n\nconst mapStateToProps = state=>{\n  return state.users\n}\nexport default connect(mapStateToProps)(AppRouter)\n"]},"metadata":{},"sourceType":"module"}