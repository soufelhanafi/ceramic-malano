{"ast":null,"code":"var _jsxFileName = \"/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/pages/products/editProductModal/index.js\";\nimport React from \"react\";\nimport NumberFormat from 'react-number-format';\nimport { Modal, Form, Select, Input, Button, Spin, Alert, Row, Col } from 'antd';\nimport { connect } from \"react-redux\";\nimport clientActions from \"../../../redux/clients/actions\";\nimport styles from \"./styles.module.scss\";\n\nclass EditClientModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      price: this.props.productToEdit.price\n    };\n\n    this.handleCancel = e => {\n      e.preventDefault();\n      this.props.dispatch({\n        type: clientActions.SET_STATE,\n        payload: {\n          showEditModal: false,\n          productToEdit: {}\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        form,\n        dispatch,\n        productToEdit\n      } = this.props;\n      form.validateFields((error, values) => {\n        if (!error) {\n          dispatch({\n            type: clientActions.UPDATE_CLIENT,\n            payload: {\n              productToEdit: { ...productToEdit,\n                ...values\n              }\n            }\n          });\n        }\n      });\n    };\n\n    this.onValueChange = input => {\n      if (input.floatValue) {\n        this.setState({\n          price: input.floatValue,\n          amountError: false\n        });\n        return;\n      }\n\n      this.setState({\n        amount: false,\n        amountError: true\n      });\n    };\n\n    this.onQuantityChage = input => {\n      if (input.floatValue) {\n        this.setState({\n          quantity: input.floatValue,\n          quantityError: false\n        });\n        return;\n      }\n\n      this.setState({\n        quantity: false,\n        quantityError: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      showEditModal,\n      productToEdit\n    } = this.props;\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const {\n      loading,\n      showErrorMessage,\n      message,\n      categories\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Modal, {\n      title: \"Basic Modal\",\n      visible: showEditModal,\n      width: 700,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      footer: null,\n      destroyOnClose: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      spinning: loading,\n      tip: \"Loading...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, showErrorMessage && /*#__PURE__*/React.createElement(Alert, {\n      message: message,\n      type: \"error\",\n      banner: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Le nom du produit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('name', {\n      initalValue: productToEdit.name,\n      rules: [{\n        required: true,\n        message: 'Le nom du produit Obligatoire.'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"La marque\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('mark', {\n      initalValue: productToEdit.mark,\n      rules: [{\n        required: true,\n        message: 'La marque Obligatoire!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Cat\\xE9gorie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('catId', {\n      initalValue: productToEdit.catId,\n      rules: [{\n        required: true,\n        message: 'La Catégorie du produit est obligatoire'\n      }]\n    })( /*#__PURE__*/React.createElement(Select, {\n      showSearch: true,\n      filterOption: (input, option) => {\n        return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n      },\n      onSelect: v => console.log(v),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, categories.map(item => {\n      return /*#__PURE__*/React.createElement(Select.Option, {\n        key: item.id,\n        value: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 23\n        }\n      }, item.name);\n    })))), /*#__PURE__*/React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-between\",\n      align: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      lg: 10,\n      className: `amount_container  ${this.state.amountError && 'amount_container_error'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: `amount_label amount_label_required`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, \"Prix d'unit\\xE9\"), /*#__PURE__*/React.createElement(NumberFormat, {\n      placeholder: \"0,00 dhs\",\n      className: 'react-number-format ' + (this.state.amountError && 'react-number-format_error'),\n      decimalSeparator: \",\",\n      decimalScale: 2,\n      fixedDecimalScale: 2,\n      thousandSeparator: ' ',\n      suffix: ' €',\n      initialValue: productToEdit.catId,\n      onValueChange: e => this.onValueChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }), this.state.amountError && /*#__PURE__*/React.createElement(\"span\", {\n      className: 'amount_error',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \"Champs obligatoire !\")), /*#__PURE__*/React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      lg: 10,\n      className: `amount_container  ${this.state.quantityError && 'amount_container_error'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: `amount_label amount_label_required`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, \"Quantit\\xE9 d'unit\\xE9\"), /*#__PURE__*/React.createElement(NumberFormat, {\n      className: 'react-number-format ' + (this.state.quantityError && 'react-number-format_error'),\n      placeholder: \"0\",\n      thousandSeparator: ' ',\n      onValueChange: e => this.onQuantityChage(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }), this.state.quantityError && /*#__PURE__*/React.createElement(\"span\", {\n      className: 'amount_error',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, \"Champs obligatoire !\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"D\\xE9scription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('description', {\n      initalValue: productToEdit.description\n    })( /*#__PURE__*/React.createElement(Input.TextArea, {\n      rows: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.footer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, \"Valider\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, \"Annuler\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.products;\n};\n\nconst WrappedClientModalForm = Form.create({\n  name: 'edit_product_modal'\n})(EditClientModal);\nexport default connect(mapStateToProps)(WrappedClientModalForm);","map":{"version":3,"sources":["/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/pages/products/editProductModal/index.js"],"names":["React","NumberFormat","Modal","Form","Select","Input","Button","Spin","Alert","Row","Col","connect","clientActions","styles","EditClientModal","Component","state","price","props","productToEdit","handleCancel","e","preventDefault","dispatch","type","SET_STATE","payload","showEditModal","handleSubmit","form","validateFields","error","values","UPDATE_CLIENT","onValueChange","input","floatValue","setState","amountError","amount","onQuantityChage","quantity","quantityError","render","getFieldDecorator","loading","showErrorMessage","message","categories","handleOk","initalValue","name","rules","required","mark","catId","option","children","toLowerCase","indexOf","v","console","log","map","item","id","description","footer","mapStateToProps","products","WrappedClientModalForm","create"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport NumberFormat from 'react-number-format'\nimport { Modal, Form, Select, Input, Button, Spin, Alert, Row, Col } from 'antd';\nimport { connect } from \"react-redux\"\nimport clientActions from \"../../../redux/clients/actions\"\nimport styles from \"./styles.module.scss\"\n\n\nclass EditClientModal extends React.Component {\n\n  state = {\n    price: this.props.productToEdit.price\n  }\n\n  handleCancel = e =>{\n    e.preventDefault()\n    this.props.dispatch({\n      type:clientActions.SET_STATE,\n      payload: {showEditModal: false, productToEdit:{}}\n    })\n  }\n\n  handleSubmit = e=>{\n    e.preventDefault()\n    const { form, dispatch,productToEdit } = this.props\n    form.validateFields((error, values) => {\n      if(!error){\n        dispatch({\n          type: clientActions.UPDATE_CLIENT,\n          payload: {productToEdit: {...productToEdit, ...values}}\n        })\n      }\n    })\n  }\n  onValueChange = input => {\n    if (input.floatValue) {\n      this.setState({ price: input.floatValue, amountError: false })\n      return\n    }\n    this.setState({ amount: false, amountError: true })\n  }\n\n  onQuantityChage = input =>{\n    if (input.floatValue) {\n      this.setState({ quantity: input.floatValue, quantityError: false })\n      return\n    }\n    this.setState({ quantity: false, quantityError: true })\n  }\n  render(){\n    const { showEditModal, productToEdit} = this.props\n    const { getFieldDecorator } = this.props.form;\n    const {loading, showErrorMessage, message, categories} = this.props\n    return (\n      <Modal\n        title=\"Basic Modal\"\n        visible={showEditModal}\n        width={700}\n        onOk={this.handleOk}\n        onCancel={this.handleCancel}\n        footer={null}\n        destroyOnClose={true}\n      >\n        <Spin spinning={loading} tip=\"Loading...\">\n        {showErrorMessage&&<Alert message={message} type=\"error\" banner />}\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Form.Item label=\"Le nom du produit\">\n              {getFieldDecorator('name', {\n                initalValue:productToEdit.name,\n                rules: [{ required: true, message: 'Le nom du produit Obligatoire.' }],\n              })(\n                <Input/>,\n              )}\n            </Form.Item>\n            <Form.Item label=\"La marque\">\n              {getFieldDecorator('mark', {\n                initalValue:productToEdit.mark,\n                rules: [\n                  { required: true, message: 'La marque Obligatoire!' },\n                ],\n              })(\n                <Input />,\n              )}\n            </Form.Item>\n            <Form.Item label=\"Catégorie\">\n              {getFieldDecorator(\n                'catId',\n                {\n                  initalValue:productToEdit.catId,\n                  rules: [{ required: true, message: 'La Catégorie du produit est obligatoire' }],},\n              )(\n                <Select\n                  showSearch\n                  filterOption={(input, option) => {\n                    return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }}\n                  onSelect={v=>console.log(v)}\n                >\n                  {categories.map(item => {\n                    return (\n                      <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                      </Select.Option>\n                    )\n                  })}\n                </Select>,\n              )}\n            </Form.Item>\n            <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\n                <Col\n                  xs={24}\n                  sm={24}\n                  lg={10}\n                  className={`amount_container  ${this.state.amountError &&\n                    'amount_container_error'}`}\n                >\n                  <label className={`amount_label amount_label_required`}>Prix d'unité</label>\n                  <NumberFormat\n                    placeholder=\"0,00 dhs\"\n                    className={\n                      'react-number-format ' +\n                      (this.state.amountError && 'react-number-format_error')\n                    }\n                    decimalSeparator=\",\"\n                    decimalScale={2}\n                    fixedDecimalScale={2}\n                    thousandSeparator={' '}\n                    suffix={' €'}\n                    initialValue={productToEdit.catId}\n                    onValueChange={e => this.onValueChange(e)}\n                  />\n                  {this.state.amountError && (\n                    <span className={'amount_error'}>Champs obligatoire !</span>\n                  )}\n                </Col>\n                <Col\n                  xs={24}\n                  sm={24}\n                  lg={10}\n                  className={`amount_container  ${this.state.quantityError &&\n                    'amount_container_error'}`}\n                >\n                  <label className={`amount_label amount_label_required`}>Quantité d'unité</label>\n                  <NumberFormat\n                    className={\n                      'react-number-format ' +\n                      (this.state.quantityError && 'react-number-format_error')\n                    }\n                    placeholder=\"0\"\n                    thousandSeparator={' '}\n                    onValueChange={e => this.onQuantityChage(e)}\n                  />\n                  {this.state.quantityError && (\n                    <span className={'amount_error'}>Champs obligatoire !</span>\n                  )}\n                </Col>\n            </Row>\n            <Form.Item label=\"Déscription\">\n              {getFieldDecorator('description', {\n                initalValue:productToEdit.description,\n              })(\n                <Input.TextArea rows={4} />,\n              )}\n            </Form.Item>\n            <div className={styles.footer}>\n              <div>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Valider\n                </Button>\n              </div>\n              <div>\n                <Button onClick={this.handleCancel}>Annuler</Button>\n              </div>\n            </div>\n          </Form>\n        </Spin>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = state=>{\n  return state.products\n}\n\nconst WrappedClientModalForm = Form.create({ name: 'edit_product_modal' })(EditClientModal);\n\nexport default connect(mapStateToProps)(WrappedClientModalForm)\n"]},"metadata":{},"sourceType":"module"}