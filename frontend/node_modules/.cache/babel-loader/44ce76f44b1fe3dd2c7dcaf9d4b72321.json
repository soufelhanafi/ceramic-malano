{"ast":null,"code":"import { all, takeEvery, put, call } from 'redux-saga/effects';\nimport * as clientApis from \"../../services/clients\";\nimport actions from \"./actions\";\nexport function* LOAD_CLIENTS({\n  payload\n}) {\n  const {\n    size,\n    page,\n    sort,\n    order\n  } = payload;\n  yield put({\n    type: actions.SET_STATE,\n    payload: {\n      loading: true\n    }\n  });\n  const response = yield call(clientApis.loadClients, size, page, sort, order);\n\n  if (response) {\n    debugger;\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loading: false,\n        clients: response.content,\n        totalPages: response.totalPages,\n        totalElements: response.totalElements,\n        size,\n        page,\n        sort,\n        order\n      }\n    });\n  } else {\n    debugger;\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loading: false\n      }\n    });\n  }\n}\nexport default function* rootSaga() {\n  yield all([takeEvery(actions.LOAD_CLIENTS, LOAD_CLIENTS)]);\n}","map":{"version":3,"sources":["/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/redux/clients/sagas.js"],"names":["all","takeEvery","put","call","clientApis","actions","LOAD_CLIENTS","payload","size","page","sort","order","type","SET_STATE","loading","response","loadClients","clients","content","totalPages","totalElements","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AACA,OAAO,KAAKC,UAAZ,MAA4B,wBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,UAAUC,YAAV,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAiC;AACtC,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA;AAAnB,MAA4BJ,OAAlC;AACA,QAAML,GAAG,CAAC;AACRU,IAAAA,IAAI,EAAEP,OAAO,CAACQ,SADN;AAERN,IAAAA,OAAO,EAAE;AAACO,MAAAA,OAAO,EAAE;AAAV;AAFD,GAAD,CAAT;AAIA,QAAMC,QAAQ,GAAG,MAAMZ,IAAI,CAACC,UAAU,CAACY,WAAZ,EAAwBR,IAAxB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,KAA1C,CAA3B;;AACA,MAAII,QAAJ,EAAc;AACZ;AACA,UAAMb,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEP,OAAO,CAACQ,SADN;AAERN,MAAAA,OAAO,EAAC;AAAEO,QAAAA,OAAO,EAAC,KAAV;AACNG,QAAAA,OAAO,EAAEF,QAAQ,CAACG,OADZ;AAENC,QAAAA,UAAU,EAAEJ,QAAQ,CAACI,UAFf;AAGNC,QAAAA,aAAa,EAAEL,QAAQ,CAACK,aAHlB;AAINZ,QAAAA,IAJM;AAIAC,QAAAA,IAJA;AAIMC,QAAAA,IAJN;AAIYC,QAAAA;AAJZ;AAFA,KAAD,CAAT;AAQD,GAVD,MAUK;AACH;AACA,UAAMT,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEP,OAAO,CAACQ,SADN;AAERN,MAAAA,OAAO,EAAC;AAAEO,QAAAA,OAAO,EAAC;AAAV;AAFA,KAAD,CAAT;AAID;AACF;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAMrB,GAAG,CAAC,CACRC,SAAS,CAACI,OAAO,CAACC,YAAT,EAAuBA,YAAvB,CADD,CAAD,CAAT;AAGD","sourcesContent":["import { all, takeEvery, put, call } from 'redux-saga/effects'\nimport * as clientApis from \"../../services/clients\"\nimport actions from \"./actions\"\n\nexport function* LOAD_CLIENTS({payload}){\n  const {size, page, sort, order} = payload\n  yield put({\n    type: actions.SET_STATE,\n    payload: {loading: true}\n  })\n  const response = yield call(clientApis.loadClients,size, page, sort, order)\n  if (response) {\n    debugger\n    yield put({\n      type: actions.SET_STATE,\n      payload:{ loading:false,\n        clients: response.content,\n        totalPages: response.totalPages,\n        totalElements: response.totalElements,\n        size, page, sort, order }\n    })\n  }else{\n    debugger\n    yield put({\n      type: actions.SET_STATE,\n      payload:{ loading:false }\n    })\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeEvery(actions.LOAD_CLIENTS, LOAD_CLIENTS),\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}