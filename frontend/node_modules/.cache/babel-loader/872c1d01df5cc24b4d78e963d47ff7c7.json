{"ast":null,"code":"var _jsxFileName = \"/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/pages/clients/clientsList/index.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table, Button } from \"antd\";\nimport clientActions from \"../../../redux/clients/actions\";\nimport styles from \"./styles.module.scss\";\n\nclass ClientsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.columns = [{\n      title: 'Nom Complet',\n      dataIndex: 'fullName',\n      key: 'fullName',\n      sorter: true\n    }, {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      sorter: true\n    }, {\n      title: 'CINE',\n      dataIndex: 'cine',\n      key: 'cine',\n      sorter: true\n    }, {\n      title: 'Télé',\n      dataIndex: 'tele',\n      key: 'tele',\n      sorter: true\n    }, {\n      title: 'Reste',\n      dataIndex: 'totalToPay',\n      key: 'totalToPay',\n      sorter: true\n    }, {\n      title: 'Action',\n      key: 'Action',\n      render: record => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, \"Editer\"), /*#__PURE__*/React.createElement(Button, {\n        type: \"Danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, \"Supprimer\"))\n    }];\n\n    this.handleTableChange = (pagination, filters, sorter) => {\n      const order = sorter.order ? sorter.order.substring(0, 3) : null;\n      const sort = sorter.column ? sorter.field : null;\n      this.props.dispatch({\n        type: clientActions.LOAD_CLIENTS,\n        payload: {\n          size: pagination.pageSize,\n          page: pagination.current,\n          sort,\n          order\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      clients,\n      page,\n      totalElements,\n      size\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Table, {\n      columns: this.columns,\n      dataSource: clients,\n      onChange: this.handleTableChange,\n      pagination: {\n        current: parseInt(page),\n        total: parseInt(totalElements),\n        pageSize: parseInt(size)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.clients;\n};\n\nexport default connect(mapStateToProps)(ClientsList);","map":{"version":3,"sources":["/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/pages/clients/clientsList/index.js"],"names":["React","connect","Table","Button","clientActions","styles","ClientsList","Component","columns","title","dataIndex","key","sorter","render","record","handleTableChange","pagination","filters","order","substring","sort","column","field","props","dispatch","type","LOAD_CLIENTS","payload","size","pageSize","page","current","clients","totalElements","parseInt","total","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Table, Button } from \"antd\"\nimport clientActions from \"../../../redux/clients/actions\"\nimport styles from \"./styles.module.scss\"\n\nclass ClientsList extends React.Component {\n\n  columns = [\n    {\n    title: 'Nom Complet',\n    dataIndex: 'fullName',\n    key: 'fullName',\n    sorter: true\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n    sorter: true\n  },\n  {\n    title: 'CINE',\n    dataIndex: 'cine',\n    key: 'cine',\n    sorter: true\n  },{\n    title: 'Télé',\n    dataIndex: 'tele',\n    key: 'tele',\n    sorter: true\n  },{\n    title: 'Reste',\n    dataIndex: 'totalToPay',\n    key: 'totalToPay',\n    sorter: true\n  },\n  {\n    title: 'Action',\n    key: 'Action',\n    render: (record)=><div>\n      <Button type=\"primary\">Editer</Button>\n      <Button type=\"Danger\">Supprimer</Button>\n    </div>\n  },\n  ]\n\n  handleTableChange = (pagination, filters, sorter) => {\n    const order = sorter.order ? sorter.order.substring(0,3) : null\n    const sort = sorter.column?sorter.field:null\n    this.props.dispatch({\n      type: clientActions.LOAD_CLIENTS,\n      payload:{size:pagination.pageSize, page: pagination.current, sort, order}\n    })\n  }\n\n\n  render(){\n    const {clients, page, totalElements, size} = this.props\n    return(\n          <Table\n            columns={this.columns}\n            dataSource={clients}\n            onChange={this.handleTableChange}\n            pagination={{\n                  current: parseInt(page),\n                  total: parseInt(totalElements),\n                  pageSize: parseInt(size),\n                }}\n\n           />\n    )\n  }\n}\n\nconst mapStateToProps = state=>{\n  return state.clients\n}\n\nexport default connect(mapStateToProps)(ClientsList)\n"]},"metadata":{},"sourceType":"module"}