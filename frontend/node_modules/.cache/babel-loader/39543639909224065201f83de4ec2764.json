{"ast":null,"code":"var _jsxFileName = \"/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/pages/products/editProductModal/index.js\";\nimport React from \"react\";\nimport { Modal, Form, Icon, Input, Button, Spin, Alert } from 'antd';\nimport { connect } from \"react-redux\";\nimport clientActions from \"../../../redux/clients/actions\";\nimport { IdcardOutlined, PhoneOutlined } from '@ant-design/icons';\nimport styles from \"./styles.module.scss\";\n\nclass EditClientModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleCancel = e => {\n      e.preventDefault();\n      this.props.dispatch({\n        type: clientActions.SET_STATE,\n        payload: {\n          showEditModal: false,\n          clientToEdit: {}\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        form,\n        dispatch,\n        clientToEdit\n      } = this.props;\n      form.validateFields((error, values) => {\n        if (!error) {\n          dispatch({\n            type: clientActions.UPDATE_CLIENT,\n            payload: {\n              clientToEdit: { ...clientToEdit,\n                ...values\n              }\n            }\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      showEditModal,\n      clientToEdit\n    } = this.props;\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const {\n      loading,\n      showErrorMessage,\n      message\n    } = this.props;\n    console.log(showEditModal);\n    return /*#__PURE__*/React.createElement(Modal, {\n      title: \"Basic Modal\",\n      visible: showEditModal,\n      width: 700,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      footer: null,\n      destroyOnClose: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      spinning: loading,\n      tip: \"Loading...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, showErrorMessage && /*#__PURE__*/React.createElement(Alert, {\n      message: message,\n      type: \"error\",\n      banner: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Nom complet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('fullName', {\n      initialValue: clientToEdit.fullName,\n      rules: [{\n        required: true,\n        message: 'Nom complet Obligatoire!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('email', {\n      initialValue: clientToEdit.email,\n      rules: [{\n        required: true,\n        message: 'Email Obligatoire!'\n      }, {\n        type: 'email',\n        message: \"Cette adresse email n'est pas valide\"\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"CINE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('cine', {\n      initialValue: clientToEdit.cine,\n      rules: [{\n        required: true,\n        message: 'CINE Obligatoire!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(IdcardOutlined, {\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"T\\xE9l\\xE9phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('tele', {\n      initialValue: clientToEdit.tele,\n      rules: [{\n        required: true,\n        message: 'Téléphone Obligatoire!'\n      }, {\n        pattern: /^(?:(?:\\+|00)212|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$/,\n        message: \"Ce numéro de téléphone n'est pas valide\"\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(PhoneOutlined, {\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Reste \\xE0 payer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('totalToPay', {\n      initialValue: clientToEdit.totalToPay,\n      rules: [{\n        required: true,\n        message: 'Le reste à payer Obligatoire!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"dollar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.footer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Confirmer\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Annuler\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.products;\n};\n\nconst WrappedClientModalForm = Form.create({\n  name: 'edit_client_modal'\n})(EditClientModal);\nexport default connect(mapStateToProps)(WrappedClientModalForm);","map":{"version":3,"sources":["/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano-frontend/src/pages/products/editProductModal/index.js"],"names":["React","Modal","Form","Icon","Input","Button","Spin","Alert","connect","clientActions","IdcardOutlined","PhoneOutlined","styles","EditClientModal","Component","handleCancel","e","preventDefault","props","dispatch","type","SET_STATE","payload","showEditModal","clientToEdit","handleSubmit","form","validateFields","error","values","UPDATE_CLIENT","render","getFieldDecorator","loading","showErrorMessage","message","console","log","handleOk","initialValue","fullName","rules","required","color","email","cine","tele","pattern","totalToPay","footer","mapStateToProps","state","products","WrappedClientModalForm","create","name"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Modal, Form, Icon, Input, Button, Spin, Alert } from 'antd';\nimport { connect } from \"react-redux\"\nimport clientActions from \"../../../redux/clients/actions\"\nimport { IdcardOutlined, PhoneOutlined } from '@ant-design/icons';\nimport styles from \"./styles.module.scss\"\n\n\nclass EditClientModal extends React.Component {\n\n  handleCancel = e =>{\n    e.preventDefault()\n    this.props.dispatch({\n      type:clientActions.SET_STATE,\n      payload: {showEditModal: false, clientToEdit:{}}\n    })\n  }\n\n  handleSubmit = e=>{\n    e.preventDefault()\n    const { form, dispatch,clientToEdit } = this.props\n    form.validateFields((error, values) => {\n      if(!error){\n        dispatch({\n          type: clientActions.UPDATE_CLIENT,\n          payload: {clientToEdit: {...clientToEdit, ...values}}\n        })\n      }\n    })\n  }\n  render(){\n    const { showEditModal, clientToEdit} = this.props\n    const { getFieldDecorator } = this.props.form;\n    const {loading, showErrorMessage, message} = this.props\n    console.log(showEditModal);\n    return (\n      <Modal\n        title=\"Basic Modal\"\n        visible={showEditModal}\n        width={700}\n        onOk={this.handleOk}\n        onCancel={this.handleCancel}\n        footer={null}\n        destroyOnClose={true}\n      >\n        <Spin spinning={loading} tip=\"Loading...\">\n        {showErrorMessage&&<Alert message={message} type=\"error\" banner />}\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Form.Item label=\"Nom complet\">\n              {getFieldDecorator('fullName', {\n                initialValue:clientToEdit.fullName,\n                rules: [{ required: true, message: 'Nom complet Obligatoire!' }],\n              })(\n                <Input\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                />,\n              )}\n            </Form.Item>\n            <Form.Item label=\"Email\">\n              {getFieldDecorator('email', {\n                initialValue:clientToEdit.email,\n                rules: [\n                  { required: true, message: 'Email Obligatoire!' },\n                  {\n                    type: 'email',\n                    message: \"Cette adresse email n'est pas valide\",\n                  },\n                ],\n              })(\n                <Input\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                />,\n              )}\n            </Form.Item>\n            <Form.Item label=\"CINE\">\n              {getFieldDecorator('cine', {\n                initialValue:clientToEdit.cine,\n                rules: [{ required: true, message: 'CINE Obligatoire!' }],\n              })(\n                <Input\n                  prefix={<IdcardOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                />,\n              )}\n            </Form.Item>\n            <Form.Item label=\"Téléphone\">\n              {getFieldDecorator('tele', {\n                initialValue:clientToEdit.tele,\n                rules: [\n                    { required: true, message: 'Téléphone Obligatoire!' },\n                    {\n                      pattern:/^(?:(?:\\+|00)212|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$/,\n                      message: \"Ce numéro de téléphone n'est pas valide\",\n                    }\n                  ],\n              })(\n                <Input\n                  prefix={<PhoneOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                />,\n              )}\n            </Form.Item>\n            <Form.Item label=\"Reste à payer\">\n              {getFieldDecorator('totalToPay', {\n                initialValue:clientToEdit.totalToPay,\n                rules: [\n                    { required: true, message: 'Le reste à payer Obligatoire!' },\n                  ],\n              })(\n                <Input\n                  prefix={<Icon type=\"dollar\" />}\n                />,\n              )}\n            </Form.Item>\n            <div className={styles.footer}>\n              <div>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Confirmer\n                </Button>\n              </div>\n              <div>\n                <Button onClick={this.handleCancel}>Annuler</Button>\n              </div>\n            </div>\n          </Form>\n        </Spin>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = state=>{\n  return state.products\n}\n\nconst WrappedClientModalForm = Form.create({ name: 'edit_client_modal' })(EditClientModal);\n\nexport default connect(mapStateToProps)(WrappedClientModalForm)\n"]},"metadata":{},"sourceType":"module"}