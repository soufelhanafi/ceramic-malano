{"ast":null,"code":"import { all, takeEvery, put, call, select } from 'redux-saga/effects';\nimport { message } from \"antd\";\nimport * as purchaseApis from \"../../services/purchases\";\nimport actions from \"./actions\";\n\nconst getPurchasesState = state => state.purchases;\n\nexport function* LOAD_PURCHASES({\n  payload\n}) {\n  const {\n    size,\n    page,\n    sort,\n    order,\n    search\n  } = payload;\n  yield put({\n    type: actions.SET_STATE,\n    payload: {\n      loading: true\n    }\n  });\n  const response = yield call(purchaseApis.loadPurchases, size, page, sort, order, search);\n\n  if (response) {\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loading: false,\n        purchases: response.content,\n        totalPages: response.totalPages,\n        totalElements: response.totalElements,\n        size,\n        page,\n        sort,\n        order\n      }\n    });\n  } else {\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loading: false\n      }\n    });\n  }\n}\nexport function* ADD_NEW_PURCHASE({\n  payload\n}) {\n  const {\n    newPurchase\n  } = payload;\n  yield put({\n    type: actions.SET_STATE,\n    payload: {\n      loadingInModal: true\n    }\n  });\n  const response = yield call(purchaseApis.createNewPurchase, newPurchase);\n\n  if (response) {\n    const {\n      size,\n      page,\n      sort,\n      order\n    } = yield select(getPurchasesState);\n    message.success('Un nouveau purchase a été ajouté avec succés');\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loadingInModal: false,\n        showErrorMessage: false,\n        showAddModal: false\n      }\n    });\n    yield put({\n      type: actions.LOAD_PURCHASES,\n      payload: {\n        size,\n        page,\n        sort,\n        order\n      }\n    });\n  } else {\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loadingInModal: false,\n        showErrorMessage: true,\n        message: \"Une erreur est survenue, veuillez réessayez dans quelques minutes\"\n      }\n    });\n  }\n}\nexport function* UPDATE_PURCHASE({\n  payload\n}) {\n  const {\n    purchaseToEdit\n  } = payload;\n  yield put({\n    type: actions.SET_STATE,\n    payload: {\n      loadingInModal: true\n    }\n  });\n  const response = yield call(purchaseApis.updatePurchase, purchaseToEdit);\n\n  if (response) {\n    const {\n      size,\n      page,\n      sort,\n      order\n    } = yield select(getPurchasesState);\n    message.success('Le purchase a été mis à jour avec succès');\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loadingInModal: false,\n        showErrorMessage: false,\n        showEditModal: false\n      }\n    });\n    yield put({\n      type: actions.LOAD_PURCHASES,\n      payload: {\n        size,\n        page,\n        sort,\n        order\n      }\n    });\n  } else {\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loadingInModal: false,\n        showEditModal: false\n      }\n    });\n    message.error('Une erreur est survenue, veuillez réessayez dans quelques minutes');\n  }\n}\nexport function* DELETE_PURCHASE({\n  payload\n}) {\n  const {\n    purchaseToDelete\n  } = yield select(getPurchasesState);\n  yield put({\n    type: actions.SET_STATE,\n    payload: {\n      loadingInModal: true\n    }\n  });\n  const response = yield call(purchaseApis.deletePurchase, purchaseToDelete);\n\n  if (response) {\n    const {\n      size,\n      page,\n      sort,\n      order\n    } = yield select(getPurchasesState);\n    message.success('le purchase a été supprimé avec succès');\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loadingInModal: false,\n        showErrorMessage: false,\n        showDeleteModal: false\n      }\n    });\n    yield put({\n      type: actions.LOAD_PURCHASES,\n      payload: {\n        size,\n        page,\n        sort,\n        order\n      }\n    });\n  } else {\n    yield put({\n      type: actions.SET_STATE,\n      payload: {\n        loadingInModal: false,\n        showDeleteModal: false\n      }\n    });\n    message.error('Une erreur est survenue, veuillez réessayez dans quelques minutes');\n  }\n}\nexport default function* rootSaga() {\n  yield all([takeEvery(actions.LOAD_PURCHASES, LOAD_PURCHASES), takeEvery(actions.ADD_NEW_PURCHASE, ADD_NEW_PURCHASE), takeEvery(actions.UPDATE_PURCHASE, UPDATE_PURCHASE), takeEvery(actions.DELETE_PURCHASE, DELETE_PURCHASE)]);\n}","map":{"version":3,"sources":["/Users/soufelhanafi/souf-projects/fl/bachir/ceramic-milano/frontend/src/redux/purchase/sagas.js"],"names":["all","takeEvery","put","call","select","message","purchaseApis","actions","getPurchasesState","state","purchases","LOAD_PURCHASES","payload","size","page","sort","order","search","type","SET_STATE","loading","response","loadPurchases","content","totalPages","totalElements","ADD_NEW_PURCHASE","newPurchase","loadingInModal","createNewPurchase","success","showErrorMessage","showAddModal","UPDATE_PURCHASE","purchaseToEdit","updatePurchase","showEditModal","error","DELETE_PURCHASE","purchaseToDelete","deletePurchase","showDeleteModal","rootSaga"],"mappings":"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","sourcesContent":["import { all, takeEvery, put, call, select } from 'redux-saga/effects'\nimport {message} from \"antd\"\nimport * as purchaseApis from \"../../services/purchases\"\nimport actions from \"./actions\"\n\nconst getPurchasesState = state => state.purchases\n\nexport function* LOAD_PURCHASES({payload}){\n  const {size, page, sort, order, search} = payload\n  yield put({\n    type: actions.SET_STATE,\n    payload: {loading: true}\n  })\n  const response = yield call(purchaseApis.loadPurchases,size, page, sort, order, search)\n  if (response) {\n    yield put({\n      type: actions.SET_STATE,\n      payload:{ loading:false,\n        purchases: response.content,\n        totalPages: response.totalPages,\n        totalElements: response.totalElements,\n        size, page, sort, order }\n    })\n  }else{\n    yield put({\n      type: actions.SET_STATE,\n      payload:{ loading:false }\n    })\n  }\n}\n\nexport function* ADD_NEW_PURCHASE({payload}){\n  const {newPurchase} = payload\n  yield put({\n    type: actions.SET_STATE,\n    payload: {loadingInModal:true}\n  })\n  const response = yield call(purchaseApis.createNewPurchase,newPurchase)\n  if(response){\n    const {size, page, sort, order} = yield select(getPurchasesState)\n    message.success('Un nouveau purchase a été ajouté avec succés');\n    yield put({\n      type: actions.SET_STATE,\n      payload: {loadingInModal:false, showErrorMessage:false, showAddModal: false}\n    })\n    yield put({\n      type:actions.LOAD_PURCHASES,\n      payload: {size, page, sort, order}\n    })\n  }else {\n    yield put({\n      type: actions.SET_STATE,\n      payload: {loadingInModal:false, showErrorMessage:true, message:\"Une erreur est survenue, veuillez réessayez dans quelques minutes\"}\n    })\n  }\n}\n\nexport function* UPDATE_PURCHASE({payload}){\n  const {purchaseToEdit} = payload\n  yield put({\n    type: actions.SET_STATE,\n    payload: {loadingInModal:true}\n  })\n  const response = yield call(purchaseApis.updatePurchase, purchaseToEdit)\n  if(response){\n    const {size, page, sort, order} = yield select(getPurchasesState)\n    message.success('Le purchase a été mis à jour avec succès');\n    yield put({\n      type: actions.SET_STATE,\n      payload: {loadingInModal: false, showErrorMessage:false, showEditModal: false}\n    })\n    yield put({\n      type:actions.LOAD_PURCHASES,\n      payload: {size, page, sort, order}\n    })\n  }else {\n    yield put({\n      type: actions.SET_STATE,\n      payload: {loadingInModal:false, showEditModal: false }\n    })\n    message.error('Une erreur est survenue, veuillez réessayez dans quelques minutes');\n  }\n}\n\nexport function* DELETE_PURCHASE({payload}){\n  const {purchaseToDelete} = yield select(getPurchasesState)\n  yield put({\n    type: actions.SET_STATE,\n    payload: {loadingInModal:true}\n  })\n  const response = yield call(purchaseApis.deletePurchase, purchaseToDelete)\n  if(response){\n    const {size, page, sort, order} = yield select(getPurchasesState)\n    message.success('le purchase a été supprimé avec succès');\n    yield put({\n      type: actions.SET_STATE,\n      payload: {loadingInModal: false, showErrorMessage:false, showDeleteModal: false}\n    })\n    yield put({\n      type:actions.LOAD_PURCHASES,\n      payload: {size, page, sort, order}\n    })\n  }else {\n    yield put({\n      type: actions.SET_STATE,\n      payload: {loadingInModal:false, showDeleteModal: false }\n    })\n    message.error('Une erreur est survenue, veuillez réessayez dans quelques minutes');\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeEvery(actions.LOAD_PURCHASES, LOAD_PURCHASES),\n    takeEvery(actions.ADD_NEW_PURCHASE, ADD_NEW_PURCHASE),\n    takeEvery(actions.UPDATE_PURCHASE, UPDATE_PURCHASE),\n    takeEvery(actions.DELETE_PURCHASE, DELETE_PURCHASE),\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}